---
// Profile configuration page for TractStack v2.0
// Integrates with Go backend using session-first architecture

import Layout from '../layouts/Layout.astro';
import { ProfileSwitch } from '../components/profile/ProfileSwitch';

const config = {
  title: "Configure your Session",
  description: "Manage your TractStack profile and session preferences"
};

const gtag = import.meta.env.PUBLIC_GTAG || false;
---

<Layout title={config.title} description={config.description}>
  <header class="bg-white shadow-sm">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center py-6">
        <div class="flex items-center">
          <h1 class="text-2xl font-bold text-gray-900">{config.title}</h1>
        </div>
        <nav class="flex space-x-4">
          <a href="/" class="text-gray-500 hover:text-gray-900">Home</a>
        </nav>
      </div>
    </div>
  </header>

  <main id="main-content">
    <div class="px-6 font-sans text-xl py-24">
      <div class="max-w-3xl mx-auto">
        <div class="space-y-6">
          <p class="text-black">
            This website has been "pressed" with Tract Stack. As you read and click around
            it will open up like a choose-your-own adventure book.
          </p>
          <p class="text-black">
            Without your consent, no personal information will be collected from your device.
          </p>
          
          <h3 class="text-xl pt-12 text-gray-700 text-sm inline-flex items-center">
            Allow Tract Stack to retain memory of your session and preferences
            <span class="pl-2 text-gray-400" title="We will use a few kilobytes of localStorage in your browser.">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                      d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </span>
          </h3>
          
          <!-- Consent Toggle (simplified for v2.0) -->
          <div class="py-4">
            <label class="flex items-center">
              <input 
                type="checkbox" 
                id="consent-toggle"
                class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
              />
              <span class="ml-2 text-sm text-gray-700">Remember my preferences</span>
            </label>
          </div>

          <!-- Profile Switch Component -->
          <ProfileSwitch client:load />

          {gtag && (
            <p class="pt-12 text-gray-600">
              <em>This site uses Google Analytics.</em> Please refer to
              <a
                class="text-blue-600 underline hover:text-black"
                href="https://policies.google.com/technologies/partner-sites"
                target="_blank"
              >
                Google privacy policy
              </a>
              .
            </p>
          )}
        </div>
        
        <div class="text-center pt-6 text-2xl md:text-3xl">
          <a
            href="/"
            class="px-3.5 py-2.5 bg-black text-white rounded-lg hover:rotate-1 hover:bg-orange-500 transition-all duration-200"
          >
            Close
          </a>
        </div>
      </div>
    </div>
  </main>

  <footer class="bg-gray-50 border-t">
    <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
      <div class="text-center text-sm text-gray-500">
        <p>Powered by <a href="https://tractstack.org" class="text-blue-600 hover:text-blue-800">Tract Stack</a></p>
      </div>
    </div>
  </footer>

  <!-- Initialize TractStack -->
  <script>
    import { ProfileStorage } from '../utils/profileStorage';

    // Initialize consent toggle
    const consentToggle = document.getElementById('consent-toggle') as HTMLInputElement;
    if (consentToggle) {
      // Set initial state from storage
      const currentConsent = ProfileStorage.getConsent();
      consentToggle.checked = currentConsent === '1';

      // Handle consent changes
      consentToggle.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          ProfileStorage.storeConsent('1');
        } else {
          ProfileStorage.storeConsent('0');
          // Optionally clear profile when consent is removed
          // ProfileStorage.clearProfile();
        }
        
        // Trigger ProfileSwitch re-render by reloading
        window.location.reload();
      });
    }

    // Global debug helper
    window.tractStackProfile = {
      storage: ProfileStorage,
      debug: () => ProfileStorage.debugProfile(),
      clear: () => ProfileStorage.clearSession(),
    };
  </script>
</Layout>
