---
import { ClientRouter } from 'astro:transitions';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { getBrandConfig } from '@/stores/brand';
import type { MenuNode } from '@/types/tractstack';

export interface Props {
  title: string;
  description?: string;
  slug?: string;
  menu?: MenuNode | null;
  created?: string;
  isContext?: boolean;
  isStoryKeep?: boolean;
  isEditable?: boolean;
  brandConfig?: any;
  storyfragmentId: string;
}

const {
  title,
  description = 'TractStack dynamic website',
  slug = '',
  menu = null,
  created,
  isContext = false,
  isStoryKeep = false,
  isEditable = false,
  brandConfig: propBrandConfig,
  storyfragmentId,
} = Astro.props;

const isDev = import.meta.env.DEV;
const cssBasePath = isDev ? '/styles' : '/media/css';
const fontBasePath = isDev ? '/fonts' : '/media/fonts';

const mainStylesUrl = isStoryKeep
  ? `${cssBasePath}/storykeep.css`
  : isDev
    ? `${cssBasePath}/storykeep.css`
    : `${cssBasePath}/frontend.css`;

const goBackend = import.meta.env.PUBLIC_GO_BACKEND || 'http://localhost:8080';
const tenantId =
  Astro.locals.tenant?.id || import.meta.env.PUBLIC_TENANTID || 'default';

const brandConfig = propBrandConfig || (await getBrandConfig(tenantId));
---

<!doctype html>
<html lang="en" class="motion-safe:scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, viewport-fit=cover"
    />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/svg+xml" href="/brand/favicon.ico" />
    <title>{title}</title>
    <link rel="stylesheet" href={`${cssBasePath}/custom.css`} />
    <link rel="stylesheet" href={mainStylesUrl} />

    <ClientRouter />

    <script
      is:inline
      type="text/javascript"
      src="//assets.mediadelivery.net/playerjs/player-0.1.0.min.js"></script>

    <script
      src="https://unpkg.com/htmx.org@2.0.4"
      crossorigin="anonymous"
      is:inline
      is:persist></script>

    <script
      define:vars={{ goBackend, tenantId, fontBasePath, storyfragmentId }}
      is:inline
    >
      function createTractstackConfig() {
        window.TRACTSTACK_CONFIG = {
          configured: true,
          backendUrl: goBackend,
          tenantId: tenantId,
          fontBasePath: fontBasePath,
          storyfragmentId: storyfragmentId,
        };
      }

      function updateTractstackConfig() {
        if (window.TRACTSTACK_CONFIG) {
          window.TRACTSTACK_CONFIG.storyfragmentId = storyfragmentId;
        } else {
          createTractstackConfig();
        }
      }

      // Check if config exists. If not, create it. This handles the very first load.
      if (!window.TRACTSTACK_CONFIG) {
        createTractstackConfig();
      }

      // Update on subsequent loads, or set for the first time if script runs after initial setup
      document.addEventListener('astro:page-load', updateTractstackConfig);
    </script>
  </head>
  <body class="font-main w-full">
    <Header
      title={title}
      slug={slug}
      brandConfig={brandConfig}
      isContext={isContext}
      isStoryKeep={isStoryKeep}
      isEditable={isEditable}
      menu={menu}
    />
    <div
      id="loading-indicator"
      class="bg-myorange fixed left-0 top-0 z-50 h-1 w-full scale-x-0 transform transition-transform duration-300 ease-out"
    >
    </div>
    <div id="content" class="transition-opacity duration-300">
      <slot />
    </div>
    <Footer
      slug={slug}
      brandConfig={brandConfig}
      isContext={isContext}
      menu={menu}
      created={created}
      backToTop={true}
    />
    <script type="module" is:inline is:persist>
      import '/src/client/sse.js';
      import '/src/client/belief-events.js';
      import '/src/client/analytics-events.js';
    </script>
  </body>
</html>
